openapi: 3.0.0
info:
  title: TodoMVC
  version: 1.0.0
servers:
  - url: https://gcp-serverless-{env}.slamdev.net
    variables:
      env:
        default: dev
        enum:
          - dev
          - prod
security:
  - bearerAuth: []
paths:
  /api/items-endpoint:
    get:
      operationId: getItems
      responses:
        '200':
          description: Items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
        default:
          $ref: '#/components/responses/Error'
    post:
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewItem'
      responses:
        '200':
          description: Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          $ref: '#/components/responses/Error'
  /api/items-endpoint/{id}:
    get:
      operationId: getItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          $ref: '#/components/responses/Error'
    put:
      operationId: updateItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItem'
      responses:
        '200':
          description: Item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteItem
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseError'
  schemas:
    NewItem:
      type: object
      properties:
        name:
          type: string
    UpdateItem:
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
    Item:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        completed:
          type: boolean
    ResponseError:
      type: object
      properties:
        requestId:
          type: string
          format: uuid
        message:
          type: string
